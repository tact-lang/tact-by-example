{
  "name": "tact",
  "scopeName": "source.tact",
  "fileTypes": ["tact"],
  "foldingStartMarker": "\\{s*$",
  "foldingStopMarker": "^\\s*\\}",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#import"
    },
    {
      "include": "#struct"
    },
    {
      "include": "#contract-or-trait"
    },
    {
      "include": "#fun-declaration"
    },
    {
      "include": "#statements"
    }
  ],
  "repository": {
    "import": {
      "name": "meta.import.tact",
      "begin": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(import)\\b\\s*",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.import.tact"
        }
      },
      "end": "\\s*(;)",
      "endCaptures": {
        "1": {
          "name": "punctuation.terminator.tact"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#strings"
        }
      ]
    },
    "struct": {
      "name": "meta.struct.tact",
      "begin": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(struct|message)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.struct"
        }
      },
      "end": "(?<=\\})",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#struct-header"
        },
        {
          "include": "#struct-body"
        }
      ]
    },
    "struct-header": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "match": "\\b[\\w]+\\b",
          "captures": {
            "0": {
              "name": "entity.name.type.tact"
            }
          }
        },
        {
          "match": "\\(((?:\\b0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b)|(?:\\b[0-9]+\\b))\\)",
          "captures": {
            "1": {
              "name": "constant.numeric"
            }
          }
        }
      ]
    },
    "struct-body": {
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.block.tact"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.block.tact"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#field-declaration"
        }
      ]
    },
    "contract-or-trait": {
      "name": "meta.struct.tact",
      "begin": "(?<![_$[:alnum:]])(?:(?<=\\.\\.\\.)|(?<!\\.))\\b(contract|trait)\\b",
      "beginCaptures": {
        "1": {
          "name": "keyword.other.struct"
        }
      },
      "end": "(?<=\\})",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "name": "keyword.control.with.tact",
          "match": "with"
        },
        {
          "name": "entity.name.type.tact",
          "match": "\\b[\\w]+\\b"
        },
        {
          "include": "#contract-or-trait-body"
        }
      ]
    },
    "contract-or-trait-body": {
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.block.tact"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.block.tact"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#init-declaration"
        },
        {
          "include": "#receive-declaration"
        },
        {
          "include": "#bounce-declaration"
        },
        {
          "include": "#fun-declaration"
        },
        {
          "include": "#const-declaration"
        },
        {
          "include": "#field-declaration"
        }
      ]
    },
    "field-declaration": {
      "name": "meta.struct.field.tact",
      "begin": "(\\b[\\w]+\\b)",
      "beginCaptures": {
        "1": {
          "name": "variable.object.property.tact"
        }
      },
      "end": "(;)",
      "endCaptures": {
        "1": {
          "name": "punctuation.terminator.tact"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#type-annotation"
        },
        {
          "include": "#variable-init"
        }
      ]
    },
    "const-declaration": {
      "name": "meta.struct.field.tact",
      "begin": "(const)\\s*(\\b[\\w]+\\b)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.const.tact"
        },
        "2": {
          "name": "variable.object.property.tact"
        }
      },
      "end": "(;)",
      "endCaptures": {
        "1": {
          "name": "punctuation.terminator.tact"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#type-annotation"
        },
        {
          "include": "#variable-init"
        }
      ]
    },
    "init-declaration": {
      "name": "meta.struct.field.tact",
      "begin": "(init)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.init.tact"
        }
      },
      "end": "(?<=\\})",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#fun-arguments"
        },
        {
          "include": "#block-declaration"
        }
      ]
    },
    "receive-declaration": {
      "name": "meta.struct.field.tact",
      "begin": "(receive)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.receive.tact"
        }
      },
      "end": "(?<=\\})",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#fun-arguments"
        },
        {
          "include": "#block-declaration"
        }
      ]
    },
    "bounce-declaration": {
      "name": "meta.struct.field.tact",
      "begin": "(bounce)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.bounce.tact"
        }
      },
      "end": "(?<=\\})",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#fun-arguments"
        },
        {
          "include": "#block-declaration"
        }
      ]
    },
    "fun-declaration": {
      "name": "meta.function.tact",
      "begin": "\\b(get|native|extends|mutates|virtual|override|fun)\\b",
      "beginCaptures": {
        "1": {
          "name": "storage.modifier.tact"
        }
      },
      "end": "(?<=\\}|;)",
      "patterns": [
        {
          "include": "#fun-declaration-body"
        }
      ]
    },
    "fun-declaration-body": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#fun-arguments"
        },
        {
          "include": "#type-annotation"
        },
        {
          "include": "#block-declaration"
        },
        {
          "name": "storage.modifier.tact",
          "match": "\\b(get|native|extends|mutates|virtual|override|fun)\\b"
        },
        {
          "name": "meta.definition.function.tact entity.name.function.tact",
          "match": "\\b[\\w]+\\b"
        }
      ]
    },
    "fun-arguments": {
      "name": "meta.parameters.tact",
      "begin": "\\(",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.parameters.begin.tact"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.parameters.end.tact"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#strings"
        },
        {
          "match": "(?:(self)|(\\b[\\w]+\\b))\\s*(:)\\s*(\\b[\\w]+\\b)",
          "captures": {
            "1": {
              "name": "variable.language.self.tact"
            },
            "2": {
              "name": "variable.name.tact"
            },
            "4": {
              "name": "entity.name.type.tact"
            }
          }
        }
      ]
    },
    "block-declaration": {
      "name": "meta.block.tact",
      "begin": "\\{",
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.block.begin.tact"
        }
      },
      "end": "\\}",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.block.end.tact"
        }
      },
      "patterns": [
        {
          "include": "#statements"
        }
      ]
    },
    "statements": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#block-declaration"
        },
        {
          "include": "#expressions"
        }
      ]
    },
    "expressions": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#keywords"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#strings"
        },
        {
          "include": "#type-annotation"
        },
        {
          "include": "#variables"
        },
        {
          "include": "#function-call"
        },
        {
          "include": "#struct-init"
        }
      ]
    },
    "struct-init": {
      "name": "meta.struct.init",
      "begin": "(\\b[\\w]+\\b)\\s*(\\{)",
      "beginCaptures": {
        "1": {
          "name": "entity.name.type.tact"
        },
        "2": {
          "name": "punctuation.definition.block.begin.tact"
        }
      },
      "end": "(})",
      "endCaptures": {
        "2": {
          "name": "punctuation.definition.block.end.tact"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#struct-property"
        }
      ]
    },
    "struct-property": {
      "name": "meta.struct.init.property,",
      "begin": "(\\b[\\w]+\\b)\\s*(:)",
      "beginCaptures": {
        "1": {
          "name": "variable.name.tact"
        },
        "2": {
          "name": "punctuation.property.tact"
        }
      },
      "end": "(?=\\}|\\,)",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#expressions"
        }
      ]
    },
    "variable-init": {
      "name": "meta.variable.property.init",
      "begin": "(=)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.tact"
        }
      },
      "end": "(?=\\}|\\{|\\,|\\;)",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#expressions"
        }
      ]
    },
    "type-annotation": {
      "name": "meta.type.annotation.tact",
      "begin": "(:)\\s+",
      "beginCaptures": {
        "1": {
          "name": "keyword.operator.type.annotation.tact"
        }
      },
      "end": "(?=\\{|\\;|\\=|\\,|\\))",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#type-as"
        },
        {
          "include": "#type-generic"
        },
        {
          "name": "keyword.operator.optional.tact",
          "match": "\\?"
        },
        {
          "match": "\\b[\\w]+\\b",
          "name": "entity.name.type.tact"
        }
      ]
    },
    "type-generic": {
      "name": "meta.type.generics.tact",
      "begin": "<",
      "end": ">",
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#type-as"
        },
        {
          "name": "punctuation.tact",
          "match": ","
        },
        {
          "match": "\\b[\\w]+\\b",
          "name": "entity.name.type.tact"
        }
      ]
    },
    "type-as": {
      "name": "meta.type.annotation.as.tact",
      "begin": "(as)\\s+",
      "end": "(?=\\{|\\;|\\=|\\,|\\))",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.as.tact"
        }
      },
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "match": "\\b[\\w]+\\b",
          "name": "storage.modifier.tact"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.tact",
          "match": "\\b(if|else|while|do|until|repeat|return|extends|mutates|virtual|override|native|let|const|fun|self|is|initOf|map|get|as)\\b"
        },
        {
          "name": "keyword.operator",
          "match": "(?<=\\s)(<=>|>=|<=|!=|==|\\^>>|\\~>>|>>|<<|\\/%|\\^%|\\~%|\\^\\/|\\~\\/|\\+=|-=|\\*=|\\/=|~\\/=|\\^\\/=|%=|\\^%=|<<=|>>=|~>>=|\\^>>=|&=|\\|=|\\^=|\\^|=|~|\\/|%|-|\\*|\\+|>|<|&|\\||:|\\?)(?=\\s)"
        },
        {
          "name": "keyword.other",
          "match": "\\b(false|true)\\b"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.tact",
      "begin": "\"",
      "end": "\""
    },
    "numeric": {
      "name": "constant.numeric",
      "match": "(?:\\b0(?:x|X)[0-9a-fA-F][0-9a-fA-F_]*\\b)|(?:\\b[0-9]+\\b)"
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line",
          "match": "\\/\\/(.*)"
        },
        {
          "name": "comment.block",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "match": "\\b[\\w]+\\b(?!\\s*\\()(?!\\s*\\{)",
          "name": "variable.name.tact"
        }
      ]
    },
    "function-call": {
      "patterns": [
        {
          "match": "\\b[\\w]+\\b(?=\\s*\\()(?!\\s*\\{)",
          "name": "entity.name.function.tact"
        }
      ]
    }
  }
}
